'''
	[문제]
		철수네 공장의 창고를 아래 a리스트로 표현하였다.
		1은 물건이 차 있는 상황이고 0은 비어있는 상황이다.
		랜덤(1~5)으로 물건 크기를 입력받고 창고에 저장 후 출력하시오.
		저장할 수 없으면 "창고 부족"이라고 출력하시오.
		단, 물건은 앞에서부터 채워나간다.
	[예]
		r = 3
  		[0,1,0,0,0,1,0,0] : [0,1,1,1,1,1,0,0]
    
		r = 4
		[0,1,0,0,0,1,0,0]  : "창고부족"
'''
'''
1 = 물건있음
0 = 물건없음 
조건1 = 랜덤(1~5) 출력
조건2 = 랜덤값이 3이하면 물건을 앞에서부터 채운다
	조건1) 인덱스 값이 1 + 1의 위치부터 채운다
조건3 = 랜덤값이 3초과면 물건을 채울수 없다, "창고부족" 출력
'''
import random
a = [0,1,0,0,0,1,0,0]

num = random.randint(1, 5)
print("물건 수 =",num)

# 시작점 인덱스와 끝점 인덱스를 찾아야함 
start = 0 
end = 0 
for i in range(len(a)) :
	# a리스트 인덱스의 값이 1이고 스타트 변수가 0일떄 스타트 변수에 i의 값을 저장한다.
	if a[i] == 1 :
		if start == 0 :
			start = i
		# 스타트 변수에 i의 값이 0이 아니므로 위의 식이 거짓, else식 발동 
		# end변수에 i을 값을 저장한다.
		else :
			end = i

print("start =", start)
print("end =", end)

# 인덱스값이기때문에 시작과 끝을 뺀 나머지 -1을 해야 빈 인덱스의 값이 나온다.
count = end - start - 1 
print("빈공간 =", count)

# 조건문 랜덤으로 출력된 num의 값이 count빈공간에 들어갈수있는지 확인한다.
# 빈공간(count)의 값이 랜덤(num)값 보다 크다면
if count >= num :
	# num값은 새로운 변수에 저장
	temp = num
	# i변수에 시작점(start) + 1, 저장을 시작하는 공간을 저장
	i = start + 1
	# 반복문으로 랜덤값(num)을 1씩 감소시키면 0이될때까지 
	# a[start + 1]리스트 안에 1을 저장
	# 위치값i도 1씩 증가시켜주면서 리스트의 0인 공간에 저장
	while temp != 0 :
		a[i] = 1
		i += 1 
		temp -= 1
	# if 조건문 안에서 a리스트 출력
	print(a)

	# 빈공간(count)의 값보다 랜덤값(num)의 값이 크면 실행 
else : 
	print("창고부족")








# for i in range(len(a)) :
# 	if num < 4 :
# 		if a[i] == 1 : 
# 			a[i + 1] = 1
	
# 	else :
# 		print("창고부족")

# print(a)